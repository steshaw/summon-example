name: CI

on:
  pull_request:
  push:

jobs:
  nix:
    name: Nix ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:

    - name: info
      run: |
        set -x
        nproc
        nproc --all
        cat /sys/fs/cgroup/cpuset/cpuset.cpus
        id -u

    - uses: actions/checkout@v2.3.4

    - uses: actions/cache@v2.1.6
      name: Cache Nix Store
      with:
        path: |
          /nix/store/
        key:
          nix-store-${{ hashFiles('**/*.nix') }}
        restore-keys: |
          nix-store-${{ hashFiles('**/*.nix') }}
          nix-store-

    - uses: nixbuild/nix-quick-install-action@v6
      with:
        # Version 2.4pre20210707_02dd6bb is not an available.
        nix_version: 2.4pre20210601_5985b8b

        nix_conf: |
          max-jobs = auto
          trusted-users = root runner
          experimental-features = nix-command flakes
          substituters = https://hydra.iohk.io https://iohk.cachix.org https://cache.nixos.org/
          trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

    - uses: cachix/install-nix-action@v13
      if: false
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          substituters = https://hydra.iohk.io https://iohk.cachix.org https://cache.nixos.org/
          trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

    - name: Modify PATH
      run: |
        echo GITHUB_PATH before
        cat $GITHUB_PATH | sed 's/^/  /'
        echo -----------------------
        echo $PWD/scripts >>$GITHUB_PATH
        echo GITHUB_PATH after
        cat $GITHUB_PATH | sed 's/^/  /'
        echo -----------------------

    - name: Nix info
      env:
        NIX_PATH: nixpkgs=https://github.com/NixOS/nixpkgs/archive/3c6f3f84af60a8ed5b8a79cf3026b7630fcdefb8.tar.gz
      run: ci-nix-info

    - name: Build
      run: |
        project-nix-build

    - name: Test
      run: |
        project-nix-test

    - name: Smoke Test
      run: |
        project-nix-smoke-test

    - name: Test Nix shell
      run: |
        ci-test-nix-shell

    # Work around caching files that are not readable.
    # https://github.com/actions/cache/issues/133
    - name: Make /nix/store readable by current user
      if: false
      run: sudo chown -R $(id -u) /nix/store/

  cabal:
    name: Cabal ${{ matrix.os }} cabal-${{ matrix.cabal }} ghc-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        cabal: ["3.4.0.0"]
        ghc:
          - "8.10.4"

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: haskell/actions/setup@v1
      name: Setup Haskell
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Show cabal-store
      run: |
        echo ${{ steps.setup-haskell-cabal.outputs.cabal-store }}

    - uses: actions/cache@v2.1.6
      name: Cache Cabal build artifacts
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key:
          ${{ runner.os }}-${{ matrix.ghc }}-cabal-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-cabal-${{ hashFiles('cabal.project.freeze') }}
          ${{ runner.os }}-${{ matrix.ghc }}-cabal-

    - name: Configure
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct

    - name: Freeze
      if: false
      run: |
        cabal freeze

    - name: Install dependencies
      run: |
        cabal build all --only-dependencies

    - name: Build
      run: |
        cabal build all

    - name: Test
      run: |
        cabal test all

  stack:
    name: Stack ${{ matrix.os }} / stack-${{ matrix.stack }} ghc-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        stack: ["2.7.3"]
        ghc:
          - "8.10.4"

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: haskell/actions/setup@v1
      name: Setup Haskell Stack
      id: setup-haskell-stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - name: Show stack-root
      run: |
        echo ${{ steps.setup-haskell-stack.outputs.stack-root }}

    - name: Cache hit occurred on the primary key?
      run: |
        echo ${{ runner.os }}-${{ matrix.ghc }}-stack-${{ hashFiles('stack.lock') }}

    - uses: actions/cache@v2.1.6
      name: Cache Stack build artifacts
      with:
        path: |
          ~/.stack
          .stack-work
        key:
          ${{ runner.os }}-${{ matrix.ghc }}-stack-${{ hashFiles('stack.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-stack-${{ hashFiles('stack.lock') }}
          ${{ runner.os }}-${{ matrix.ghc }}-stack-

    - name: Install and build dependencies
      run: |
        stack --system-ghc build --test --bench --only-dependencies

    - name: Build
      run: |
        stack --system-ghc build --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack --system-ghc test
